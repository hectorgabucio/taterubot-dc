// Code generated by mockery v2.10.6. DO NOT EDIT.

package mocks

import (
	domain "github.com/hectorgabucio/taterubot-dc/domain"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// VoiceDataRepositoryMock is an autogenerated mock type for the VoiceDataRepository type
type VoiceDataRepositoryMock struct {
	mock.Mock
}

// GetOnRange provides a mock function with given fields: guildID, from, to
func (_m *VoiceDataRepositoryMock) GetOnRange(guildID string, from time.Time, to time.Time) ([]domain.VoiceData, error) {
	ret := _m.Called(guildID, from, to)

	var r0 []domain.VoiceData
	if rf, ok := ret.Get(0).(func(string, time.Time, time.Time) []domain.VoiceData); ok {
		r0 = rf(guildID, from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.VoiceData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, time.Time, time.Time) error); ok {
		r1 = rf(guildID, from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: data
func (_m *VoiceDataRepositoryMock) Save(data domain.VoiceData) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.VoiceData) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
